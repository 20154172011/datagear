<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.datagear</groupId>
		<artifactId>datagear</artifactId>
		<version>2.0.0</version>
	</parent>
	
	<artifactId>datagear-web</artifactId>
	<name>datagear-web</name>
	<packaging>war</packaging>
	
	<properties>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<productName>datagear-${project.version}</productName>
		<productNameJar>${productName}.jar</productNameJar>
		<productNameWar>${productName}.war</productNameWar>
		<dist.target.folderName>${productName}-bin</dist.target.folderName>
		<dist.target.dir>${project.build.directory}/${dist.target.folderName}</dist.target.dir>
		<dist.package.target.dir>${project.build.directory}/${dist.target.folderName}-package</dist.package.target.dir>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.datagear</groupId>
			<artifactId>datagear-persistence</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.datagear</groupId>
			<artifactId>datagear-management</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.datagear</groupId>
			<artifactId>datagear-dataexchange</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.datagear</groupId>
			<artifactId>datagear-analysis</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.datagear</groupId>
			<artifactId>datagear-util</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload.version}</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.cometd.java</groupId>
		    <artifactId>cometd-java-server</artifactId>
		    <version>${cometd.version}</version>
		</dependency>
	</dependencies>
	
	<build>
		<finalName>${productName}</finalName>
		
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-antrun-plugin</artifactId>
			    <version>${maven-antrun-plugin.version}</version>
			    <executions>
			    	<!-- 拷贝LICENSE文件 -->
			    	<execution>
			    		<id>copyLICENSE</id>
			    		<phase>prepare-package</phase>
			    		<goals>
			    			<goal>run</goal>
			    		</goals>
			    		<configuration>
			    			<tasks>
			    				<copy file="../LICENSE" todir="${project.build.outputDirectory}" />
			    			</tasks>
			    		</configuration>
			    	</execution>
			    </executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			    <version>${maven-antrun-plugin.version}</version>
				<executions>
					<execution>
						<id>clearDistDirectory</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<delete dir="${dist.target.dir}" includeEmptyDirs="true" />
								<mkdir dir="${dist.target.dir}"/>
								<delete dir="${dist.package.target.dir}" includeEmptyDirs="true" />
								<mkdir dir="${dist.package.target.dir}" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>prepareDistResources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${dist.target.dir}/</outputDirectory>
							<resources>
								<resource>
									<directory>dist</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			    <version>${maven-antrun-plugin.version}</version>
				<executions>
					<execution>
						<id>buildDistPackage</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<copy file="${project.build.directory}/${productName}.war" tofile="${dist.target.dir}/${productNameJar}" />
								<mkdir dir="${dist.target.dir}/logs"/>
								<copy file="../LICENSE" todir="${dist.target.dir}" />
								
								<zip destfile="${dist.package.target.dir}/${productName}.zip" basedir="${project.build.directory}" includes="${dist.target.folderName}/**/*" />
								<copy file="${project.build.directory}/${productNameWar}.original" tofile="${dist.package.target.dir}/${productNameWar}" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
	</build>
</project>
