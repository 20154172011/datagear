<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.datagear.management.domain.AnalysisProject">

	<insert id="insert">
		INSERT INTO DATAGEAR_ANALYSIS_PROJECT
			(
			AP_ID, AP_NAME, AP_DESC, AP_CREATE_USER_ID, AP_CREATE_TIME
			)
		VALUES
			(
			#{entity.id}, #{entity.name}, #{entity.desc}, #{entity.createUser.id}, #{entity.createTime}
			)
	</insert>
	
	<update id="update">
		UPDATE DATAGEAR_ANALYSIS_PROJECT SET
			AP_NAME = #{entity.name},
			AP_DESC = #{entity.desc}
		WHERE
			AP_ID = #{entity.id}
	</update>
	
	<update id="updateCreateUserId">
		UPDATE DATAGEAR_DATA_SET SET
			DS_CREATE_USER_ID = #{newUserId}
		WHERE
			DS_CREATE_USER_ID = #{oldUserId}
	</update>
	
	<delete id="deleteById">
		DELETE FROM DATAGEAR_ANALYSIS_PROJECT
		WHERE
			AP_ID = #{id}
	</delete>
	
	<select id="getById" resultType="org.datagear.management.domain.AnalysisProject">
		SELECT
			T.*
		FROM
			(<include refid="queryViewDataPermission" />) T
		WHERE
			T.${_iq_}id${_iq_} = #{id}
	</select>
	
	<select id="getDataIdPermissions" resultType="org.datagear.management.domain.DataIdPermission">
		SELECT
			T.DATA_ID as ${_iq_}dataId${_iq_},
			T.DATA_PERMISSION as ${_iq_}dataPermission${_iq_}
		FROM
			(
				<include refid="commonDataPermission.dataIdPermissionQueryViewHead" />
				<include refid="queryViewDataPermissionId" />
				<include refid="commonDataPermission.dataIdPermissionQueryViewFoot" />
			) T
		WHERE
			<foreach item="item" collection="ids" separator=" OR ">T.DATA_ID = #{item}</foreach>
	</select>
	
	<select id="query" resultType="org.datagear.management.domain.AnalysisProject">
		SELECT
			T.*
		FROM
			(<include refid="queryViewDataPermission" />) T
		WHERE
			<include refid="queryCondition" />
		<include refid="common.queryOrder" />
	</select>
	
	<select id="pagingQueryCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			(<include refid="queryViewDataPermission" />) T
		WHERE
			<include refid="queryCondition" />
	</select>
	
	<select id="pagingQuery" resultType="org.datagear.management.domain.AnalysisProject">
		<include refid="common.pagingQueryHead" />
			SELECT
				T.*
			FROM
				(<include refid="queryViewDataPermission" />) T
			WHERE
				<include refid="queryCondition" />
			<include refid="common.queryOrder" />
		<include refid="common.pagingQueryFoot" />
	</select>
	
	<sql id="queryViewDataPermission">
		<choose><when test="DP_CURRENT_USER == null">
		<include refid="queryView" />
		</when><otherwise>
		SELECT
			T0.*,
			T1.DATA_PERMISSION as ${_iq_}dataPermission${_iq_}
		FROM
			(<include refid="queryView" />) T0
			INNER JOIN
			(
				<include refid="commonDataPermission.dataIdPermissionQueryViewHead" />
				<include refid="queryViewDataPermissionId" />
				<include refid="commonDataPermission.dataIdPermissionQueryViewFoot" />
			) T1
		ON
			T0.${_iq_}id${_iq_} = T1.DATA_ID
		WHERE
			T1.DATA_PERMISSION >= ${DP_MIN_READ_PERMISSION}
		</otherwise></choose>
	</sql>
	
	<sql id="queryViewDataPermissionId">
		SELECT
			A.AP_ID AS DP_AUTH_DATA_ID,
			A.AP_CREATE_USER_ID AS DP_AUTH_DATA_CREATOR_ID
		FROM
			DATAGEAR_ANALYSIS_PROJECT A
	</sql>
	
	<sql id="queryView">
		SELECT
			A.AP_ID AS ${_iq_}id${_iq_},
			A.AP_NAME AS ${_iq_}name${_iq_},
			A.AP_DESC AS ${_iq_}desc${_iq_},
			A.AP_CREATE_TIME AS ${_iq_}createTime${_iq_},
			A.AP_CREATE_USER_ID AS ${_iq_}createUser.id${_iq_},
			<include refid="common.fieldsForCreateUser" />
		FROM
			DATAGEAR_ANALYSIS_PROJECT A
		LEFT JOIN
			DATAGEAR_USER USR
		ON
			A.AP_CREATE_USER_ID = USR.USER_ID
	</sql>
	
	<sql id="queryCondition">
		1 = 1
		<if test="queryKeyword != null">
		AND
		(
			${_iq_}name${_iq_} LIKE #{queryKeyword}
			OR ${_iq_}desc${_iq_} LIKE #{queryKeyword}
		)
		</if>
		<include refid="commonDataPermission.dataFilterCondition" />
		<include refid="common.queryCondition" />
	</sql>
	
	<!-- 用于外部Mapper引用的公用SQL，下面的include必须采用全名，不然会出现死循环 -->
	<sql id="queryViewForAnalysisProjectAwareEntity">
		SELECT
			T.${_iq_}id${_iq_} AS ${_iq_}analysisProject.id${_iq_},
			T.${_iq_}name${_iq_} AS ${_iq_}analysisProject.name${_iq_},
			T.${_iq_}desc${_iq_} AS ${_iq_}analysisProject.desc${_iq_},
			T.${_iq_}createTime${_iq_} AS ${_iq_}analysisProject.createTime${_iq_},
			T.${_iq_}createUser.id${_iq_} AS ${_iq_}analysisProject.createUser.id${_iq_},
			T.${_iq_}createUser.name${_iq_} AS ${_iq_}analysisProject.createUser.name${_iq_},
			T.${_iq_}createUser.realName${_iq_} AS ${_iq_}analysisProject.createUser.realName${_iq_},
			T.${_iq_}createUser.admin${_iq_} AS ${_iq_}analysisProject.createUser.admin${_iq_},
			T.${_iq_}createUser.anonymous${_iq_} AS ${_iq_}analysisProject.createUser.anonymous${_iq_},
			T.${_iq_}createUser.createTime${_iq_} AS ${_iq_}analysisProject.createUser.createTime${_iq_}
		FROM
			(<include refid="org.datagear.management.domain.AnalysisProject.queryView" />) T
	</sql>
	
	<!--
		 用于外部AnalysisProjectAwareEntity实体处理权限级联引用的公用SQL，下面的include必须采用全名，不然会出现死循环。
		 注意：
		 引用方必须传递DP_RESOURCE_TYPE_ANALYSIS_PROJECT参数，且值为：AnalysisProject.AUTHORIZATION_RESOURCE_TYPE，
		 因为此SQL片段通常作为第二处数据权限片段被引入，会出现DP_RESOURCE_TYPE冲突而导致逻辑出错。
	-->
	<sql id="queryViewIdPermissionForAnalysisProjectAwareEntity">
		<bind name="DP_RESOURCE_TYPE" value="DP_RESOURCE_TYPE_ANALYSIS_PROJECT"/>
		SELECT
			T.DATA_ID as AP_ID,
			T.DATA_PERMISSION
		FROM
			(
				<include refid="commonDataPermission.dataIdPermissionQueryViewHead" />
				<include refid="org.datagear.management.domain.AnalysisProject.queryViewDataPermissionId" />
				<include refid="commonDataPermission.dataIdPermissionQueryViewFoot" />
			) T
		WHERE
			T.DATA_PERMISSION >= ${DP_MIN_READ_PERMISSION}
	</sql>
	
</mapper>